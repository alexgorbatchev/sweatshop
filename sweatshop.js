// Generated by CoffeeScript 1.6.3
var Sweatshop, fn, _, _fn, _i, _len, _ref,
  __slice = [].slice;

_ = require('lodash');

Sweatshop = (function() {
  function Sweatshop() {
    var args, _ref;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    if (typeof _(args).last() === 'object') {
      this.parent = args.pop();
    }
    this.factoryFn = args.pop();
    this.model = (_ref = args.pop()) != null ? _ref : Object;
    this.children = [];
  }

  Sweatshop.prototype.json = function(attrs, callback) {
    var _this = this;
    attrs = _.clone(attrs != null ? attrs : {});
    return this.factoryFn.call(attrs, function(err) {
      if (err != null) {
        return callback(err);
      }
      return _this.parent.factoryFn.call(attrs, function(err) {
        var result;
        if (err != null) {
          return callback(err);
        }
        result = _.merge({}, attrs);
        return callback(null, result);
      });
    });
  };

  Sweatshop.prototype.build = function(attrs, callback) {
    var _this = this;
    return this.json(attrs, function(err, result) {
      var model;
      if (err != null) {
        return callback(err);
      }
      model = _this.modelInstanceWith(result);
      return callback(null, model);
    });
  };

  Sweatshop.prototype.create = function(attrs, callback) {
    var _this = this;
    return this.build(attrs, function(err, model) {
      if (err != null) {
        return callback(err);
      }
      return _this.saveModel(model, callback);
    });
  };

  Sweatshop.prototype.define = function() {
    var args, name;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    name = typeof args[0] === 'string' ? args.shift() : this.children.length;
    return this.children[name] = (function(func, args, ctor) {
      ctor.prototype = func.prototype;
      var child = new ctor, result = func.apply(child, args);
      return Object(result) === result ? result : child;
    })(Sweatshop, __slice.call(args).concat([this]), function(){});
  };

  Sweatshop.prototype.child = function(name) {
    return this.children[name] || (function() {
      throw "Unknown factory `" + name + "`";
    })();
  };

  Sweatshop.prototype.modelInstanceWith = function(attrs) {
    return new this.model(attrs);
  };

  Sweatshop.prototype.saveModel = function(model, callback) {
    if (_.isFunction(model.save)) {
      return model.save(callback);
    } else {
      return _.defer(callback, null, model);
    }
  };

  return Sweatshop;

})();

_ref = ['json', 'build', 'create'];
_fn = function(fn) {
  var fnWithSaneArgs;
  fnWithSaneArgs = Sweatshop.prototype[fn];
  return Sweatshop.prototype[fn] = function() {
    var args, attrs, callback, _ref1;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    if (typeof args[0] === 'string') {
      return (_ref1 = this.child(args[0]))[fn].apply(_ref1, args.slice(1));
    } else {
      callback = args.pop();
      attrs = args.pop();
      return fnWithSaneArgs.call(this, attrs, callback);
    }
  };
};
for (_i = 0, _len = _ref.length; _i < _len; _i++) {
  fn = _ref[_i];
  _fn(fn);
}

module.exports = new Sweatshop(_.defer);
