// Generated by CoffeeScript 1.6.3
var Sweatshop, factories, _,
  __slice = [].slice;

_ = require('lodash');

factories = {};

module.exports = Sweatshop = {
  define: function() {
    var args, factory, model, name;
    name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    switch (args.length) {
      case 1:
        factory = args[0];
        break;
      case 2:
        model = args[0], factory = args[1];
    }
    return factories[name] = {
      model: model,
      factory: factory
    };
  },
  create: function() {
    var args, attrs, callback, factory, model, name, _ref;
    name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    switch (args.length) {
      case 1:
        callback = args[0];
        break;
      case 2:
        attrs = args[0], callback = args[1];
    }
    _ref = factories[name] || (function() {
      throw "Unknown factory `" + name + "`";
    })(), model = _ref.model, factory = _ref.factory;
    if (attrs == null) {
      attrs = {};
    }
    attrs = _.clone(attrs);
    return factory.call(attrs, function() {
      var result;
      result = model ? Sweatshop.createInstanceOf(model, attrs) : _.merge({}, attrs);
      return Sweatshop.store(result, callback);
    });
  },
  createInstanceOf: function(model, attrs) {
    return new model(attrs);
  },
  store: function(model, callback) {
    if (_.isFunction(model.save)) {
      return model.save(callback);
    } else {
      return callback(null, model);
    }
  }
};
